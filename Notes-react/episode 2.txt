#Igniting our App

NPM - Manages the packages - standard repository for all the packages(dependencies)

package.json is configuration for NPM , it keep tracks of what version(approximate) is installed in our system.

Bundler - packages/bundles to our app to ship to production. (webpack,parcel, vite)
We will use Parcel in our bundler

npm install -D parcel, here -D means dev dependency
There are two types of dependencies - Dev(generally required in development phase) and normal dependency(can also be used in production too)

tilde( ~ ) and caret( ^ ) are two symbols used to specify version ranges in package. json . 
Tilde( ~ ) allows for patch updates(Major updates). 
Caret( ^ ) allows for both minor and patch updates, safe to use

package-lock.json - Keep track of exact version by locking it.

Node modules fetches all the code of all the dependencies to our system(database where all our packages exists) - collection of all the dependencies.

Transitive dependencies - where each dependency has it's own dependency and so on.

package.json and package-lock.json should be there in git but not node_modules. If package.json and package-lock.json is present we can recreate the node_modules   

parcel has created a server and has given a port and hoisting our app on server.

npx - executing a package.

***Check readme file to know about features of parcel***

Always remove main from package.json file while running npx parcel build index.html, else you'll encounter into an error.

Dev build using npx parcel index.html but for production use npx parcel build index.html

parcel-cache, node_modules, dist files are temporary files and can be re-generated by using above 2 commands. Similarly these files don't have to be pushed to git as they are different on local and server.

To make it compatible for older versions we're using browserslist. To do so add requirement in package.json file
